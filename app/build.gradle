import dependencies.*

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Versions.compilesdk
//    compileSdkVersion 29
//    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId Application.id
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }

    buildTypes {
        debug {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
        release {
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting: "true"]
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }

    sourceSets {
        test.resources.srcDirs += 'src/test/res'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android
    implementation Dependencies.kotlin_coroutines_play_services

    //Retrofit
    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_gson

    //DI
    implementation Dependencies.dagger

    //Firebase
    implementation Dependencies.firebase_firestore
    implementation Dependencies.firebase_auth
    implementation Dependencies.firebase_analytics
    implementation Dependencies.firebase_crashlytics

    //Annotation Processing
    kapt AnnotationProcessing.dagger_compiler

    // Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    //Unit Test
    testImplementation TestDependencies.mockk
    testImplementation TestDependencies.jupiter_api
    testImplementation TestDependencies.jupiter_params
    testImplementation TestDependencies.junit4
    testRuntimeOnly TestDependencies.jupiter_engine
}
